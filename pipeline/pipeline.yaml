apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-image
  namespace: cicd-pipeline-demo
spec:
  params:
    - default: 'https://github.com/malam84/springboot-hello-world2.git'
      description: Source to the GIT
      name: git-url
      type: string
    - default: master
      description: revision to be used
      name: git-revision
      type: string
    - default: ''
      description: Where to checkout the source relative to the workspace
      name: context-dir
      type: string
    - default: 'quay.io/malam/springboot-hello-world2:latest'
      description: the name of the target image including registry
      name: image-name
      type: string
    - description: the username you use to access the registry
      name: image-username
      type: string
    - description: The password you use to access the registry
      name: image-password
      type: string
    - description: The name of the namespace to apply the result to
      name: target-namespace
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.git-url)
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: revision
          value: $(params.git-revision)
        - name: subdirectory
          value: $(params.context-dir)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: package
      params:
        - name: GOALS
          value:
            - '-B'
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: maven-caching
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: build-image
      params:
        - name: TLSVERIFY
          value: 'false'
        - name: MAVEN_CLEAR_REPO
          value: 'false'
        - name: IMAGE
          value: $(params.image-name)
      runAfter:
        - package
      taskRef:
        kind: Task
        name: s2i-java-build
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: push-to-quay
      params:
        - name: TLSVERIFY
          value: 'false'
        - name: MAVEN_CLEAR_REPO
          value: 'false'
        - name: IMAGE
          value: $(params.image-name)
      runAfter:
        - build-image
      taskRef:
        kind: Task
        name: s2i-push-java
      workspaces:
        - name: source
          workspace: shared-workspace
  workspaces:
    - name: shared-workspace

